:root {
    --width: 0;
}

input:focus,
textarea:focus,
select:focus {
    outline: none;
}

body {
    padding: 0;
    margin: 0;
}

.hover {
    width: 100%;
    position: absolute;
    z-index: 4;
    align-items: center;
    text-align: center;
    display: flex;
    flex-direction: column;
    color: white;
    transition: opacity 4s;

}

.hover:hover p {
    display: block;
    opacity: 100%;
}

.hover p {
    background: rgba(0, 0, 0, 0.3);
    border-radius: 8px;
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    width: 80%;
    opacity: 0;
    transition: opacity .4s;
    display: none;

}

#cf {
    left: 0;
    top: 0;
    position: relative;
    height: 100vh;
    width: 100%;
    margin: 0;
    padding: 0;
    border: none;
    /* From https://css.glass */
}

#cf img {

    margin: 0;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100vh;
    object-fit: cover;
    -webkit-transition: opacity 1s ease-in-out;
    -moz-transition: opacity 1s ease-in-out;
    -o-transition: opacity 1s ease-in-out;
    transition: opacity 1s ease-in-out;
}



@keyframes cf1FadeInOut {
    0% {
        opacity: 0;
    }

    25% {
        opacity: 0;
    }

    50% {
        opacity: 1;
    }

    75% {
        opacity: 1;
    }

    77% {
        opacity: 0;
    }

    100% {
        opacity: 0;
    }
}

@keyframes cf2FadeInOut {
    0% {
        opacity: 0;
    }

    25% {
        opacity: 1;
    }

    50% {
        opacity: 1;
    }

    52% {
        opacity: 0;
    }

    100% {
        opacity: 0;
    }
}

@keyframes cf3FadeInOut {
    0% {
        opacity: 1;
    }

    25% {
        opacity: 1;
    }

    27% {
        opacity: 0;
    }

    76% {
        opacity: 0;
    }

    100% {
        opacity: 0;
    }
}

#cf img.one {
    animation-name: cf1FadeInOut;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
    animation-duration: 60s;
    animation-direction: alternate;
}

#cf img.two {
    animation-name: cf2FadeInOut;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
    animation-duration: 60s;
    animation-direction: alternate;
}

#cf img.there {
    animation-name: cf3FadeInOut;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
    animation-duration: 60s;
    animation-direction: alternate;
}

button {
    border: none;
    background-color: transparent;
}

button:focus {
    outline: none;
}

.main {
    left: 5%;
    top: 25%;
    color: white;
    z-index: 2;
    position: absolute;
    width: 90%;
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
}

.setScreen {
    border: solid;
    width: 45%;
    background: rgba(0, 0, 0, 0.3);
    border-radius: 8px;
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    display: flex;
    flex-direction: column;
    align-items: center;
    height: 500px;
}

.timeType {
    font-weight: 500;
    font-size: 18px;
    color: white;
    display: inline-flex;
    position: relative;
    transition: .3s;
    cursor: pointer;
}

.timeType span {
    bottom: 10px;
    position: absolute;
    width: 0%;
    height: 3px;
    background-color: white;
    transition: .3s;
}


.timeType:hover span {
    width: 100%;
}

a {
    cursor: pointer;
}

.timerScreen {
    font-size: 120px;
    font-weight: bolder;
    padding: 30px 0 0 0;
}

.volume {
    -webkit-appearance: none;
    /* Override default CSS styles */
    appearance: none;
    width: 45%;
    height: 12px;
    align-items: center;
    border-radius: 20px;
    margin: 0 5px;
    /* Full-width */
    /* Specified height */
    background: #454545;
    /* Grey background */
    outline: none;
    /* Remove outline */
    opacity: 0.7;
    /* Set transparency (for mouse-over effects on hover) */
    -webkit-transition: .2s;
    /* 0.2 seconds transition on hover */
    transition: opacity .2s;
}

.volume:hover {
    opacity: 1;
    /* Fully shown on mouse-over */
}

/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */
.volume::-webkit-slider-thumb {
    -webkit-appearance: none;
    /* Override default look */
    appearance: none;
    width: 18px;
    /* Set a specific slider handle width */
    height: 18px;
    border-radius: 50%;
    /* Slider handle height */
    background: #ffffff;
    /* Green background */
    cursor: pointer;
    /* Cursor on hover */
}



select {
    color: white;
    border: none;
    background-color: #454545;
    width: 50%;
    border-radius: 4px;
}

input[type=checkbox] {
    height: 0;
    width: 0;
    visibility: hidden;
}

.finish label {
    cursor: pointer;
    text-indent: -9999px;
    width: 50px;
    height: 25px;
    background: #454545;
    display: block;
    border-radius: 100px;
    position: relative;
}


.finish label:after {
    content: '';
    position: absolute;
    top: 5px;
    left: 5px;
    width: 15px;
    height: 15px;
    background: #ffffff;
    border-radius: 90px;
    transition: 0.3s;
}

input:checked+label {
    background: #ffffff;
}

input:checked+label:after {
    background-color: #454545;

    left: calc(100% - 5px);
    transform: translateX(-100%);
}

label:active:after {
    width: 20px;
}


.auto label {
    cursor: pointer;
    text-indent: -9999px;
    width: 50px;
    height: 25px;
    background: #454545;
    display: block;
    border-radius: 100px;
    position: relative;
}

.auto label:after {
    content: '';
    position: absolute;
    top: 5px;
    left: 5px;
    width: 15px;
    height: 15px;
    background: #ffffff;
    border-radius: 90px;
    transition: 0.3s;
}



#taskForm input,
#quetoInputForm input {
    background-color: transparent;
    color: white;
    border-color: white;
    border-radius: 4px;
    padding: 5px 20px;
    border-width: 2px;
    height: 40px;


}

#taskForm input[type=text]:focus {
    border: 3px solid #ffffff;
}

/*.timeType:after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -10px;
    width: var(--width);
    height: 4px;
    background: white;
    border-radius: 2px;
    transition: .3s;
}

.timeType:hover:after {
    width: 100%;
}
*/
.taskQuetoScreen {
    border: solid;
    width: 45%;
    background: rgba(0, 0, 0, 0.3);
    border-radius: 8px;
    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    display: flex;
    flex-direction: column;
    align-items: center;
    height: 500px;

}



.displayScreen {
    border: solid;
}

@media (max-width: 1025px) {
    .main {
        top: 10%;
        flex-direction: column;
        height: 90vh;
        justify-content: flex-start;
    }

    .setScreen {
        width: 90%;
        height: 45vh;
        margin-bottom: 5%;
    }

    .taskQuetoScreen {
        width: 90%;
        height: 45vh;

    }

    p {
        font-size: 12px;
    }

    .hover h1 {
        font-size: 36px;

    }



    .input-group {
        width: 160px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .timerScreen {
        font-size: 84px;
    }

    .Settings span {
        font-size: 12px;
    }

    .Settings {
        margin-top: -50px;
    }

    .Settings input {
        font-size: 12px;
    }

    .Settings h3 {
        font-size: 20px;
    }

    .timeSettings {
        background-color: aqua;
        width: 100px;
    }
}